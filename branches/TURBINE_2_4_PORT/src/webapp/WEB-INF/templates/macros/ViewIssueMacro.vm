#macro (viewIssueBody)
#set ($module = $currentIssue.Module)
#set ($issueType = $currentIssue.IssueType)
#set ($fullHistory = $data.Parameters.getString("fullhistory",""))
#set ($fullComments = $data.Parameters.getString("fullcomments",""))
#set ($rmit = $module.getRModuleIssueType($issueType))
#set ($canEdit = $scarabR.hasPermission($scarabG.Permission.ISSUE__EDIT, $module) && $rmit.Active)
#set ($attrValues = $currentIssue.ModuleAttributeValuesMap)
#set ($currentIssueId = $currentIssue.UniqueId)

## TODO: The getCopyToModules() can be expensive (PCN20967).  Add APIs
## which perform the "should show" check without retrieving all the
## associated data.
#set ($copyToModules = $data.User.getCopyToModules($module, 'copy'))
#set ($moveToModules = $data.User.getCopyToModules($module, 'move'))
#set ($showCopyButton = $copyToModules && !$copyToModules.isEmpty())
#set ($showMoveButton = $moveToModules && !$moveToModules.isEmpty())

<input type="hidden" name="action" value="ModifyIssue" />
<input type="hidden" name="mod_ts" value="$scarabG.Now.Time" />
<input type="hidden" name="id" value="$currentIssueId" />
<input type="hidden" name="$scarabG.Constant.OTHER_TEMPLATE" value="MoveIssue.vm" />
<input type="hidden" name="tab" value="$tab" />
#if ($issueList)
   <input type="hidden" name="$scarabG.Constant.CANCEL_TEMPLATE" value="ViewIssueLong.vm" />
#else
   <input type="hidden" name="$scarabG.Constant.CANCEL_TEMPLATE" value="ViewIssue.vm" />
#end

## uncomment to show copy and move buttons on top of the view issue page
## #if ($showCopyButton || $showMoveButton)
## <div class="functnbar">
## #if ($showMoveButton)
##     <input type="submit" value="$l10n.MoveIssue" name="eventSubmit_doMove" />&#160;
## #end
## #if ($showCopyButton)
##     <input type="submit" value="$l10n.CopyIssue" name="eventSubmit_doCopy" />
## #end
## </div>
## #end


#if ($rmit.Active.toString().equals("false"))
<div class="colbar">$l10n.IssueReadOnly</div>
#end

## PRIMARY INFO
#if ($tab.equals("1") || $tab.equals("all"))
#viewIssueTab1()
#end

### PERSONNEL
#if ($tab.equals("2") || $tab.equals("all"))
#viewIssueTab2()
#end 

## COMMENTS
#if ($tab.equals("3") || $tab.equals("all"))
#viewIssueTab3()
#end

## Attachment/URL/ Tab
#if ($tab.equals("4") || $tab.equals("all"))
#viewIssueTab4Att()
#viewIssueTab4Url()
#end

## Dependencies tab
#if ($tab.equals("6") || $tab.equals("all"))
#viewIssueTab4Dep()
#end

## ISSUE HISTORY
#if ($tab.equals("5") || $tab.equals("all"))
#viewIssueTab5()
#end

#if ($showCopyButton || $showMoveButton)
<div class="functnbar2">
#if ($showMoveButton)
    <input type="submit" value="$l10n.MoveIssue" name="eventSubmit_doMove" />&#160;
#end
#if ($showCopyButton)
    <input type="submit" value="$l10n.CopyIssue" name="eventSubmit_doCopy" />
#end
</div>
#end
	
#end ## of macro viewIssueBody()

#macro (viewIssueTab1)
<div class="axial">
<table width="100%" cellpadding="3" cellspacing="2" border="0">
<tr>
<th>$l10n.IssueId</th>
<td width="25%"><b>$currentIssue.UniqueId ($currentIssue.RModuleIssueType.DisplayName)</b></td>
<td width="*">
#initializeTabLink()
#if ($currentIssue.isBlocked())
&nbsp;&nbsp;<a class="blockedmark" STYLE="text-decoration: none" title="$l10n.IssueCurrentlyBlocked" href="$tabLink.addPathInfo("tab", "6")">$l10n.BlockedWarning</a>  
#end
&nbsp;&nbsp;
##initializeTabLink()
#if ($currentIssue.isBlockingAnyIssue())
  <a class="blockingmark" STYLE="text-decoration: none" title="$l10n.IssueDoesBlockOtherIssues" href="$tabLink.addPathInfo("tab", "6")">$l10n.BlockingWarning</a>
#end
</td>
</tr>
#if ($currentIssue.CreatedDate)
<tr>
<th>$l10n.DateCommitted</th>
<td colspan="2"><a href="mailTo:$currentIssue.CreatedBy.Email">$!currentIssue.CreatedBy.Name</a> $format.getDate($scarabR.DateFormat, $currentIssue.CreatedDate) </td>
</tr>
#end

#if ($currentIssue.ModifiedDate)
<tr>
<th>$l10n.LastModified</th>
<td colspan="2"><a href="mailTo:$currentIssue.ModifiedBy.Email">$!currentIssue.ModifiedBy.Name</a> $format.getDate($scarabR.DateFormat, $currentIssue.ModifiedDate) </td>
</tr>
#end
</table>
</div>

<div class="axial">
#foreach ($group in $issueType.getAttributeGroups($module, true))
  #if (!$group.Attributes.isEmpty())
    <h4>$group.Name #asterisk()</h4>
    <table cellpadding="3" cellspacing="2" border="0" width="100%">
      #foreach ($att in $group.Attributes)
        #set ($rma = $module.getRModuleAttribute($att, $issueType))
        #if ($rma.Active)
            #set ($attVal = $attrValues.get($att.getName().toUpperCase()))
            #set ($attrInput = $intake.AttributeValue.mapTo($attVal))
            #if ($att.AttributeType.ValidationKey)
               #set ($field = $attVal.Attribute.AttributeType.ValidationKey)
            #elseif ($att.isOptionAttribute())
               #set ($field = "OptionId")
            #else
              #set ($field = "Value")
            #end
            #if ($canEdit)
                <tr>
                  <th> #if ($rma.getRequired()) #showAsterisk() #end 
                  $rma.DisplayValue</th>
                  <td>
                #if ($att.isOptionAttribute())
                 #attrValueLeafSelect ($attVal $field "" false $attVal.isRequired())
                  #attrValueErrorMsg ($attVal $field)
                #else
                  #attrValueErrorMsg($attVal "Value")
                  #attrValueText($attrInput.Value 70)
               #end
                  </td>
                 </tr>
            #elseif ($attVal.isSet())
              #set ($display = true)
               #set ($isOptionAttr = $attVal.Attribute.isOptionAttribute())
               #if ($isOptionAttr)
                 #if ($attVal.AttributeOption.Deleted.toString().equals("true"))
                     #set ($display = false)
                 #end
               #end
               #if ($display)
                 <tr>
                   <th>$attVal.RModuleAttribute.DisplayValue</th>
                   <td>
                   #set ($attrInput = $intake.AttributeValue.mapTo($attVal))
                   
                   ## Output the value of the attribute. How this is done
                   ## depends on the attribute type.
                   #if ($isOptionAttr)
                     #if (!$attVal.AttributeOption)
	                     --
	                 #else
                       #if ($module.getRModuleOption($attVal.AttributeOption, $issueType).Active)
                         $!module.getRModuleOption($attVal.AttributeOption, $issueType).DisplayValue
                      #else
                         [I]$!module.getRModuleOption($attVal.AttributeOption, $issueType).DisplayValue
                      #end
                     #end
                   #elseif ($att.AttributeType.Name == "long-string")
                     ## Convert the raw text to formatted HTML before
                     ## displaying it.
                     $!scarabG.textToHTML($attrInput.Value.toString(), $link, $scarabR.CurrentModule)
                   #else
                     #if ($att.AttributeType.Name == "date")
                       $scarabR.formatDate($!attrInput.Value.value)
                     #else
                       ## Just output the raw value directly.
                       $!attrInput.Value
                     #end
                    
                   #end
                   </td>
                 </tr>
              #end
           #end
	#else
	    #set ($allAttrValues = $currentIssue.getModuleAttributeValuesMap(false))		
            #set ($attVal = $allAttrValues.get($att.getName().toUpperCase()))
            #set ($attrInput = $intake.AttributeValue.mapTo($attVal))
 	    #set ($isOptionAttr = $attVal.Attribute.isOptionAttribute())
	    #if ($attVal.isSet() && !$attrInput.Value.toString().trim().equals(""))
            	   <tr>
              	     <th> 
                     [I] $rma.DisplayValue</th>
                     <td>
                     #if ($isOptionAttr)
			#if ($module.getRModuleOption($attVal.AttributeOption, $issueType).Active)
                       	   $!module.getRModuleOption($attVal.AttributeOption, $issueType).DisplayValue
			#else
                       	   [I]$!module.getRModuleOption($attVal.AttributeOption, $issueType).DisplayValue
			#end
                     #else
                       $!attrInput.Value
                     #end 
                     </td>
                   </tr>
	    #end
        #end 
      #end
</table>
  #end
#end
</div>
 
#if ($canEdit)
<h4>$l10n.SaveChanges #asterisk()</h4>
<div class="axial">
   #set ($attCommentGroup = $intake.Attachment.setKey("attCommentKey$currentIssue.QueryKey"))

<table cellpadding="3" cellspacing="2" border="0" width="100%">
<tr>
<th nowrap="nowrap">#if($scarabG.isIssueReasonRequired($module))#showAsterisk()#end $l10n.ReasonForChange</th>
<td>$l10n.EnterReason
   #fieldErrorMsg($attCommentGroup.Data "")
   
   <p>#textAreaMedium("$attCommentGroup.Data.Key" $attCommentGroup.Data.Value)</p>
   <input type="hidden" name="$attCommentGroup.Name.Key" value="comment" />
</td>
</tr>
</table>
</div>

<div class="functnbar3">
<input type="submit" value="$l10n.Done" name="eventSubmit_doSubmitattributes" />
</div>
#end

#end ## of macro viewIssueTab1()

#macro (viewIssueTab2)
### PERSONNEL
<h3>$l10n.Personnel</h3>
<table width="100%" border="1" cellspacing="2" cellpadding="3">
<tr>
  <th>$l10n.Name</th>
  <th>$l10n.Username</th>
  <th>$l10n.Association</th>
</tr>

<tr class="a">
  #set ($createdUser = $currentIssue.CreatedBy)
  <td><a href="mailTo:$createdUser.Email">$!createdUser.Name</a></td>
  <td>$createdUser.UserName</td>
  <td>$l10n.CreatedBy</td>
</tr>

#set ($userAttVals = $currentIssue.UserAttributeValues)
   #foreach ($attVal in $userAttVals)
      #indexedRows($velocityCount)
      #set ($userId = $attVal.UserId)
      #set ($assignedUser = $scarabR.getUser($userId))

      <td>
        <a href="mailto:$assignedUser.Email">$!assignedUser.Name</a>
        #if (!$assignedUser.hasPermission($attVal.Attribute.Permission, $module))
            <strong>$l10n.ParenDisabled</strong>
        #end
      </td>
      <td>$assignedUser.UserName</td>
      <td>$scarabR.getAttribute($attVal.AttributeId).Name </td>
      </tr>
   #end
#* Commenting out to implement simple-assign, later
  #if ($userAttVals.size() % 2 > 0)
   <tr class="a">
  #else
   <tr class="b">
  #end
    <td>&nbsp;</td>
    <td>&nbsp;</td>
    <td><input type="text" name="add_user" value="" /></td>
    <td><select name="user_attr_id" size="">
    #foreach ($selectUserAttr in $module.getUserAttributes($issueType))
      <option value="$selectUserAttr.AttributeId">$selectUserAttr.Name:</option>
    #end
   </select>
   </tr>
*#

</table>

#if ($canEdit)
<div class="functnbar3">
##<input type="submit" value="$l10n.AddNew" name="eventSubmit_doAssign" />&#160;
##<input type="submit" value="$l10n.DeleteSelected" name="eventSubmit_doUnassign" />&#160;
#if ($scarabR.hasPermission($scarabG.Permission.ISSUE__ASSIGN, $module))
<input type="submit" value="$l10n.EditList" name="eventSubmit_doEditassignees" />
#end
</div>
#end

#end ## of macro viewIssueTab2()

#macro (viewIssueTab3)
#set ($canAddComment = $canEdit)
#set ($canEditComments = $scarabR.hasPermission($scarabG.Permission.MODULE__EDIT))
#set ($isEditComments = $canEditComments && $data.Parameters.getBoolean("edit_comments"))
#set ($comments = $currentIssue.getComments($fullComments.equals("true")))

<h3>$l10n.Comments</h3>
#if ($comments.isEmpty() && !$canAddComment)
$l10n.NoComments
#else
  #if ($canAddComment && !$isEditComments)
   <h4>$l10n.EnterComment</h4>
   <table cellspacing="2" cellpadding="3" border="0" width="100%">
     <tr>
       <td>
          #set ($commentGroup = $intake.Attachment.setKey("commentKey"))
          #textAreaLarge("$commentGroup.Data.Key" "")
          #fieldErrorMsg($commentGroup.Data "")
          <input type="hidden" name="$commentGroup.Name.Key" value="comment" />
       </td>
     </tr>
   </table>
   <div class="functnbar3">
      <input type="submit" value="$l10n.Save" name="eventSubmit_doSubmitcomment" />
   </div>
  #end

  #foreach ($comment in $comments)
     #set ($commentUser = $scarabR.getUser($comment.CreatedBy))
     <h4>$format.getDate($scarabR.DateFormat, $comment.CreatedDate)&#160;|&#160;Added by: <a href="mailto:$commentUser.Email">$!commentUser.Name</a></h4>
    #if ($isEditComments)
      <p>#textAreaLarge( "edit_comment_$comment.AttachmentId" $comment.Data)</p>
    #else
      <p>$scarabG.getCommentText($comment.Data, $link, $scarabR.CurrentModule)</p>
    #end
  #end

  #if ($isEditComments)
   <div class="functnbar3">
     <input type="submit" value="$l10n.SaveComment" name="eventSubmit_doEditcomment" />
     <input type="submit" value="$l10n.Cancel" name="eventSubmit_doCancel" />
     #commentList()
   </div>
  #elseif ($canEditComments && !$comments.isEmpty())
   <div class="functnbar3">
     <input type="hidden" value="$fullComments" name="fullcomments" />
     <input type="submit" value="$l10n.EditComment" name="eventSubmit_doEditcommentpage" />
     #commentList()
   </div>
  #elseif (!$comments.isEmpty() && $currentIssue.isCommentsLong())
   <div class="functnbar3">
     #commentList()
   </div>
  #end
#end

#end ## of macro viewIssueTab3()

#macro (viewIssueTab4Att)
#set ($atch = $scarabR.Attachment)
#set ($intakeAttachment = $intake.Attachment.mapTo($atch))
#set ($intakeAttachment = $intake.Attachment.setKey("fileKey$currentIssue.QueryKey"))
#set ($attachments = $currentIssue.ExistingAttachments)

<h3>$l10n.Attachments</h3>
#if ($attachments.isEmpty() && !$canEdit)
$l10n.NoAttachments
#else
 #if ($attachments.size() > 0)
 <table width="100%" border="1" cellspacing="2" cellpadding="3">
   <tr>
     #if ($canEdit)
         <th>$l10n.Select</th>
     #end
     <th>$l10n.Name</th>
     <th>$l10n.Description</th>
     <th>$l10n.Type</th>
     <th>$l10n.CreatedBy</th>
     <th>$l10n.CreationDate</th>
     <th>$l10n.AttachmentSize</th>     
   </tr>
   #foreach ($file in $attachments)
     #indexedRows($velocityCount)
     #if ($file.TypeId.toString().equals("1"))
       #if ($canEdit)
       <td>
           <input type="checkbox" name="file_delete_$file.AttachmentId" />
       </td>
       #end
     
       #set ($attachLink = $link.setPage("ViewAttachment.vm").setPathInfo("attachId", $file.QueryKey).addPathInfo("filename", $file.FileName).toString())
## We add the filename here in case the file is saved, it gives a nice default name
       <td><a href="$attachLink"  
         onclick="fileWindow=window.open('',
         'filewindow','resizable=yes,menubar=yes,scrollbars=yes,height=450,width=700')" 
         target="filewindow">$file.FileName</a> 
       </td>
       <td>$file.Name</td>
       <td>$file.MimeType</td>
       #set ($createdUser = $file.ScarabUserRelatedByCreatedBy)
       <td><a href="mailTo:$createdUser.Email">$!createdUser.Name</a></td>
       <td>$format.getDate($scarabR.DateFormat, $file.CreatedDate)</td>
       <td>
       #if ($file.Size.toString().equals("-1")) 
        -
       #else 
        $format.getFileSize($file.Size)
       #end
       </td>       
     </tr>
     #end
   #end
 </table>

#if ($canEdit)
<div class="functnbar3">
  <input type="submit" value="$l10n.DeleteAttachment" name="eventSubmit_doDeletefile" />
</div>
#end
#end

#end

#if ($canEdit)
<h4>$l10n.AddAttachmentTitle <small>(</small><b class="asterisk">*</b> <small>$l10n.format('AttachmentFieldRequired', $l10n.Path))</small></h4>
<div class="axial">
  <table cellpadding="3" cellspacing="2" border="0" width="100%">
    <tr>
      <th>$l10n.Path</th>
      <td>
       <input type="file" name="$intakeAttachment.File.Key" size="45"
            value="$!intakeAttachment.File.Value.FileName" />
       #fieldErrorMsg($intakeAttachment.File "")
      </td>
      <th>* $l10n.Type</th>
      <td>
        <select name="$intakeAttachment.MimeTypeA.Key" class="select">
        #if ($intakeAttachment.MimeTypeA)
          #set ($mimeA = $intakeAttachment.MimeTypeA.toString())
        #end
         #mimeTypeOptions($mimeA)
        </select>
        <br><small>$l10n.CustomMimeType:
        <input type="text" name="$intakeAttachment.MimeTypeB.Key" 
                          value="$intakeAttachment.MimeTypeB" /></p>
        #fieldErrorMsg($intakeAttachment.MimeTypeA "")
      </td>
    </tr>
    <tr>
       <th>* $l10n.Description</th>
       <td colspan="3">
        #textAreaMedium("$intakeAttachment.Name.Key" "$intakeAttachment.Name")
        #fieldErrorMsg($intakeAttachment.Name "")
       </td>
    </tr>
</table>
</div>

<div class="functnbar3">
  <input type="submit" value="$l10n.AddAttachment" name="eventSubmit_doSubmitfile"  />
</div>
#end

#end ## of macro viewIssueTab4Att()

#macro (viewIssueTab4Url)
<h3>$l10n.RelatedLinks</h3>
#if ($currentIssue.Urls.isEmpty() && !$canEdit)
    $l10n.NoLinks
#elseif(!$currentIssue.Urls.isEmpty())
 <table width="100%" border="1" cellspacing="2" cellpadding="3">
   <tr>
      #if ($canEdit)
        <th>$l10n.Select</th>
      #end
      <th>$l10n.Link</th>
      #if ($canEdit)
  	 <th>$l10n.URL</th>
     	 <th>$l10n.Description</th>
      #end
   </tr>
   #foreach ($url in $currentIssue.Urls)
    #indexedRows($velocityCount)
    #set ($counter = $velocityCount)
     #if ($canEdit)
     <td>
       <input type="checkbox" name="url_delete_$url.AttachmentId" />
     </td>
     #end
     #if ($url.Name && !$url.Name.toString().equals(""))
     <td><a href="$url.Data">$url.Name</a></td>
     #else
     <td><a href="$url.Data">$url.Data</a></td>
     #end
     #if ($canEdit)
      #set ($urlGroup = $intake.Attachment.mapTo($url))
         <td><input type="text" size="25" name="$urlGroup.Data.Key" 
                 value="$urlGroup.Data" />
         #fieldErrorMsg($urlGroup.Data "")
         </td>
         <td><input type="text" size="25" name="$urlGroup.Name.Key" 
                 value="$urlGroup.Name" />
         #fieldErrorMsg($urlGroup.Name "")
         </td>
     #end
    </tr>
   #end
 </table>
  #if ($canEdit)
   <div class="functnbar3">
    <input type="submit" value="$l10n.SaveModifiedUrl" name="eventSubmit_doSaveurl" />&#160;
    <input type="submit" value="$l10n.DeleteUrls"  name="eventSubmit_doDeleteurl" />
   </div>
  #end
#end

#* FIXME: in the future we might want to implement this.
#if ($canEdit)
<div class="axial">
  <table cellpadding="3" cellspacing="2" border="0" width="100%">
    <tr>
      <th>$l10n.Reason</th>
      <td>
        #set ($urlGroup = $intake.Attachment.setKey("urlReasonKey"))
        #textAreaMedium("$urlGroup.Name.Key" "$urlGroup.Name")
        #fieldErrorMsg($urlGroup.Name "")
      </td>
    </tr>
  </table>
</div>
#end
*#

#if($canEdit)
 <h4>$l10n.AddRelatedLinkTitle</h4>
 <div class="axial">
 <table width="100%" border="1" cellspacing="2" cellpadding="3">
   <tr>
     #set ($urlGroup = $intake.Attachment.setKey("urlKey"))
     <th>$l10n.URL</th>
     <td>
     <input type="text" class="fullWidth" name="$urlGroup.Data.Key" 
         value="$!urlGroup.Data" />
     #fieldErrorMsg($urlGroup.Data "")
     </td>
     <th>$l10n.Description</th>
     <td>
     <input type="text" class="fullWidth" name="$urlGroup.Name.Key" 
         value="$!urlGroup.Name" />
     #fieldErrorMsg($urlGroup.Name "")
     </td>
   </tr>
 </table>
 </div>
 <div class="functnbar3">
  <input type="submit" value="$l10n.AddUrlButton" name="eventSubmit_doSaveurl" />&#160;
 </div>
#end

#end ## of macro viewIssueTab4Url()

#macro (viewIssueTab4Dep)
## - alreadyExplored contains every issue that has been explored for blocking children
## to avoid redundant information.
## - alreadyListed contains the issues displayed *in the current branch* of the tree
## to avoid looping.
##
#set ($alreadyExplored = [])

<h3>$l10n.BlockingInformation</h3>
<div class="colbar">$l10n.BlockingExplanation
</div>
<div class="axial">
<table cellpadding="3" cellspacing="2" border="0" width="100%">
<tr>
<th>$l10n.BlockedStatus</th>
<td colspan="2">
#if ($currentIssue.isBlocked())
  <div class="blockedmark"><em>$l10n.IssueCurrentlyBlocked</em></div>
#else
  #if ($currentIssue.isBlockingAnyIssue())
    <div class="blockingmark"><em>$l10n.IssueDoesBlockOtherIssues</em></div>
  #else
    <div class="notblockedmark"><em>$l10n.IssueNotBlocked</em></div>
  #end
#end<br/>
</td>
</tr>
#if ($currentIssue.isBlocked())
<tr>
<th>$l10n.IssueBlockingTree</th>
<td>
$currentIssue.UniqueId: $currentIssue.DefaultText
#set ($listedIssues = [])
#listBlockingIssues($currentIssue $currentIssue.BlockingIssues $listedIssues)
</td>
</tr>
#end
<tr>
<th>$l10n.IssuesBlockedByThisOne</th>
<td nowrap>
#if ($currentIssue.isBlockingAnyIssue())
  #foreach ($bi in $currentIssue.BlockedIssues)
    #if ($bi.Module != $module)
      #set ($blockText = "$bi.UniqueId: $bi.defaultText ($bi.IssueType.Name / $bi.Module.Name)")
    #else
      #set ($blockText = "$bi.UniqueId: $bi.defaultText ($bi.IssueType.Name)")
    #end
    $link.setPage("ViewIssue.vm").addPathInfo("id", $bi.UniqueId).setLabel($blockText)<br/>
  #end
#else
  <em>$l10n.IssueDoesNotBlockOtherIssues</em>
#end
</td>
</tr>
</table>
</div>
<h3>$l10n.Dependencies</h3>

#set ($issueChildren = $currentIssue.Children)
#set ($issueParents = $currentIssue.Parents)

#if ($issueChildren.isEmpty() && $issueParents.isEmpty() && !$canEdit)
  $l10n.NoDependencies
#elseif(!$issueParents.isEmpty() || !$issueChildren.isEmpty())
  <table width="100%" border="1" cellspacing="2" cellpadding="3">
  <tr>
    #if ($canEdit && (!$issueParents.isEmpty() || !$issueChildren.isEmpty()))
     <th colspan="2">$l10n.Select</th>
    #end
  </tr>
  #set ($counter = 0)
  <tr>
  #foreach ($depend in $issueParents)
    #set ($parent = $scarabR.getIssueByPk($depend.ObservedId.toString()))
    #set ($dependGroup = $intake.Depend.mapTo($depend))
    #indexedRows($counter)
    #set ($counter = $counter + 1)
    #if ( $canEdit && $scarabR.hasPermission($scarabG.Permission.ISSUE__EDIT, $parent.Module) )
      <td>#booleanCheckbox($dependGroup.Deleted)</td>
    #elseif ($canEdit)
      <td>&nbsp;</td>
    #end
    <td>

    ## current issue
    $currentIssue.UniqueId

    #if ( $canEdit && $scarabR.hasPermission($scarabG.Permission.ISSUE__EDIT, $parent.Module) )
      <select name="$dependGroup.TypeId.Key" class="select">
      #foreach ($dependType in $currentIssue.AllDependencyTypes)
        #set ($selected = false)
        #if ($depend.TypeId.toString().equals($dependType.DependTypeId.toString()))
          #set ($selected = true)
        #end
        <option#selected($selected) value="$dependType.DependTypeId">
        #verboseDependency($dependType.Name)</option>
      #end
      </select>
    #else
      #verboseDependency($depend.DependType.Name)
    #end

    #if ($scarabR.hasPermission($scarabG.Permission.ISSUE__VIEW, $parent.Module))
      $link.setPage("ViewIssue.vm").addPathInfo("id", $parent.UniqueId).setLabel("$parent.UniqueId ($parent.defaultText)")
    #else
      $l10n.PrivateIssue
    #end

    </td>
  </tr>
  #end
  
  <tr>
  #foreach ($depend in $issueChildren)
    #set ($child = $scarabR.getIssueByPk($depend.ObserverId.toString()))
    #set ($dependGroup = $intake.Depend.mapTo($depend))
    #indexedRows($counter)
    #set ($counter = $counter + 1)
    #if ( $canEdit && $scarabR.hasPermission($scarabG.Permission.ISSUE__EDIT, $child.Module) )
      <td>#booleanCheckbox($dependGroup.Deleted)</td>
    #elseif ($canEdit)
      <td>&nbsp;</td>
    #end
    <td>

    #if ($scarabR.hasPermission($scarabG.Permission.ISSUE__VIEW, $child.Module))
      $link.setPage("ViewIssue.vm").addPathInfo("id", $child.UniqueId).setLabel("$child.UniqueId ($child.defaultText)")
    #else
      $l10n.PrivateIssue
    #end

    #if ( $canEdit && $scarabR.hasPermission($scarabG.Permission.ISSUE__EDIT, $child.Module) )
      <select name="$dependGroup.TypeId.Key" class="select">
      #foreach ($dependType in $currentIssue.AllDependencyTypes)
        #set ($selected = false)
        #if ($depend.TypeId.toString().equals($dependType.DependTypeId.toString()))
          #set ($selected = true)
        #end
        <option#selected($selected) value="$dependType.DependTypeId">
        #verboseDependency($dependType.Name)</option>
      #end
      </select>
    #else
      #verboseDependency($depend.DependType.Name)
    #end

    ## current issue
    $currentIssue.UniqueId

    </td>
  </tr>
  #end
  </table>

  #if ($canEdit)
    <div class="functnbar3">
      <input type="submit" value="$l10n.SaveModifiedDep"  name="eventSubmit_doSavedependencychanges" />
      <input type="submit" value="$l10n.DeleteDependency"  name="eventSubmit_doDeletedependencies" />
    </div>
  #end
#end


#if ($canEdit)
 <h4>$l10n.AddDependencyTitle</h4>
 <div class="axial">
  <table width="100%" border="1" cellspacing="2" cellpadding="3">
   <tr>
    <th>$l10n.NewDependency</th>
    <td colspan=2>
      #set ($newDependGroup = $intake.Depend.setKey("newDep$currentIssue.QueryKey"))
       ## issue to be entered
       <input type="hidden" name="$newDependGroup.ObservedId.Key" value="$currentIssue.IssueId" />
       <input type="text"  name="$newDependGroup.ObserverUniqueId.Key" value = "$!newDependGroup.ObserverUniqueId"  title="$l10n.PleaseEnterIssueID"/>
      ## dependency type
      <select name="$newDependGroup.TypeId.Key" class="select">
      <option value="">$l10n.ChooseDependencyType</option>
      #foreach ($dependType in $currentIssue.AllDependencyTypes)
       #set ($selected = false)
       #if ($dependType.DependTypeId.toString().equals($newDependGroup.TypeId.toString()))
        #set ($selected = true)
       #end
       <option#selected($selected) value="$dependType.DependTypeId">#verboseDependency($dependType.Name)</option>
      #end
      </select>
  
      ## current issue
      $currentIssue.UniqueId
      
      ## Error messages
      #set ($idMessage = $newDependGroup.ObserverUniqueId.Message.toString())
      #if ($idMessage.length() > 0)
        <p class="warningmark"><em>$idMessage</em></p>
      #end
      #set ($typeMessage = $newDependGroup.TypeId.Message.toString())
      #if ($typeMessage.length() > 0)
        <p class="warningmark"><em>$typeMessage</em></p>
      #end

     </td>
    </tr>
    <tr>
      <th>$l10n.Reason</th>
      <td colspan="3">
        #textAreaMedium("$newDependGroup.Description.Key" "$newDependGroup.Description")
        #fieldErrorMsg($newDependGroup.Description "")
      </td>
    </tr>
  </table>
 </div>
#end

#if ($canEdit)
<div class="functnbar3">
   <input type="submit" value="$l10n.AddDependencyButton"  name="eventSubmit_doSavedependencychanges" />&nbsp;
</div>
#end

#end ## of macro viewIssueTab4Dep()

#macro (viewIssueTab5)
#set ($allActivities = $scarabG.reverse($currentIssue.getActivity(true)))
#if (!$fullHistory.equals("true"))
  #set ($allActivities = $scarabG.subset($allActivities, 0, $currentIssue.HistoryLimit))
#end

#if (!$allActivities.isEmpty())
<h3>$l10n.ChangeHistory</h3>
  <table width="100%" cellpadding="3" cellspacing="2" border="1">
  <tr>
    <th>$l10n.DateStamp</th>
    <th>$l10n.Action</th>
    <th>$l10n.Reason</th>
    <th>$l10n.By</th>
  </tr>
  #foreach ($act in $allActivities)
    #indexedRows($velocityCount)
     <td>
     #set ($activitySet = $act.ActivitySet)
     #if ($activitySet)
       $format.getDate($scarabR.DateFormat, $activitySet.CreatedDate)
     #end
     </td>
     <td>$act.Description</td>

     #set ($reason = $scarabR.getActivityReason($activitySet, $act).toString())
     <td>$!scarabG.textToHTML($reason, $link, $scarabR.CurrentModule)
     </td>
     <td>
     #set ($user = $scarabR.getUser($activitySet.CreatedBy))
     <a href="mailto:$user.Email">$!user.Name</a>
     </td>
    </tr>
  #end
 </table>

#if ($currentIssue.isHistoryLong())
   <div class="functnbar3">
  #if ($fullHistory.equals("true"))
    #set ($historyLink = $link.setPage("$template").addPathInfo("id", $currentIssueId).addPathInfo("fullhistory", "false").addPathInfo("tab", "5"))
    #foreach ($issueId in $data.Parameters.getStrings("issue_ids"))
      #set ($historyLink = $historyLink.addPathInfo("issue_ids", $issueId))
    #end
    #if ($resultsPerPage)
      #set ($historyLink = $historyLink.addPathInfo("resultsPerPage", $resultsPerPage))
    #end
    <p><a href="$historyLink">$l10n.HideCompleteHistory</a></p>
  #else
    #set ($historyLink = $link.setPage("$template").addPathInfo("id", $currentIssueId).addPathInfo("fullhistory", "true").addPathInfo("tab", "5"))
    #foreach ($issueId in $data.Parameters.getStrings("issue_ids"))
      #set ($historyLink = $historyLink.addPathInfo("issue_ids", $issueId))
    #end
    #if ($resultsPerPage)
      #set ($historyLink = $historyLink.addPathInfo("resultsPerPage", $resultsPerPage))
    #end
    <p><a href="$historyLink">$l10n.ShowCompleteHistory</a></p>
  #end
  </div>
#end
#end

#end ## of macro viewIssueTab5()

#macro (initializeTabLink)
  #set ($tabLink = $link.setPage("ViewIssue.vm").addPathInfo("id", "$currentIssue.UniqueId").addPathInfo("eventSubmit_doSetissueview", "foo").setAction("ViewIssue").toString())

 #foreach ($prevNextId in $prevNextList)
    #set ($dummy = $tabLink.addPathInfo("issueList", $prevNextId))
 #end
#end ## of macro initializeTabLink()

#macro (commentList)
   #if ($currentIssue.isCommentsLong())
     #if ($fullComments.equals("true"))
       #set ($commentsLink = $link.setPage("ViewIssue.vm").addPathInfo("id", $currentIssue.UniqueId).addPathInfo("fullcomments", "false").addPathInfo("tab", $tab).addPathInfo("edit_comments", $isEditComments))
     <a href="$commentsLink">$l10n.HideCommentList</a>
     #else
       #set ($commentsLink = $link.setPage("ViewIssue.vm").addPathInfo("id", $currentIssueId).addPathInfo("fullcomments", "true").addPathInfo("tab", $tab).addPathInfo("edit_comments", $isEditComments))
       #set ($hiddenCommentCount = $currentIssue.CommentsCount - $currentIssue.CommentsLimit)
       
       <a href="$commentsLink">$l10n.ShowCommentList</a> ($l10n.format("ThereAreMoreComments", $hiddenCommentCount))
     #end
   #end
#end

#macro (verboseDependency $name)
  #if ($name == "blocking")
   $l10n.IsBlocked
  #elseif ($name == "duplicate")
    $l10n.DuplicateIssue
  #elseif ($name == "non-blocking")
    $l10n.NonBlocking
  #end
#end

#macro (listBlockingIssues $parent $blockingIssues $alreadyListed)
#set ($nop = $alreadyExplored.add($bi.UniqueId))
<ul class="blockingtree">
  #foreach ($bi in $blockingIssues)
  #set ($notlisted= !$alreadyListed.contains($bi.UniqueId))
    #if (!$alreadyListed.contains($bi.UniqueId))
      #set ($nop = $alreadyListed.add($bi.UniqueId))
      #if ($bi.Module != $module)
        #set ($blockText = "$bi.UniqueId: $bi.defaultText ($bi.IssueType.Name/$bi.Module.Name)")
      #else
        #set ($blockText = "$bi.UniqueId: $bi.defaultText ($bi.IssueType.Name)")
      #end
	  #if ($bi.UniqueId == $currentIssue.UniqueId)
        <li>$blockText</li>
      #else
        <li>$link.setPage("ViewIssue.vm").addPathInfo("id", $bi.UniqueId).setLabel($blockText)</li>
        #if ($bi.isBlocked() && !$alreadyExplored.contains($bi.UniqueId))
          #listBlockingIssues($bi $bi.BlockingIssues $alreadyListed)
        #end
      #end
      #set ($nop = $alreadyListed.remove($bi.UniqueId))
    #end
  #end
</ul>
#end

## FIXME: define this macro in another file or in the database
##        so that it is more easily customized by end users
##
#macro (mimeTypeOptions $mimeA)
<option value="autodetect" #if (!$mimeA || $mimeA.length() == 0)selected="selected"#end>$l10n.AutoDetect</option>
<option value="text/plain" #if ($mimeA == "text/plain"))selected="selected"#end>$l10n.PatchFile</option>
<option value="text/plain" #if ($mimeA == "text/plain")selected="selected"#end>$l10n.PlainText</option>
<option value="text/html" #if ($mimeA == "text/html")selected="selected"#end>$l10n.HTMLSource</option>
<option value="image/bmp" #if ($mimeA == "image/bmp")selected="selected"#end>$l10n.BMPImage</option>
<option value="image/gif" #if ($mimeA == "image/gif")selected="selected"#end>$l10n.GIFImage</option>
<option value="image/jpeg" #if ($mimeA == "image/jpeg")selected="selected"#end>$l10n.JPEGImage</option>
<option value="image/png" #if ($mimeA == "image/png")selected="selected"#end>$l10n.PNGImage</option>
<option value="application/mac-binhex40" #if ($mimeA == "application/mac-binhex40")selected="selected"#end>$l10n.MacBinhex</option>
<option value="application/pdf" #if ($mimeA == "application/pdf")selected="selected"#end>$l10n.PDFFormat</option>
<option value="application/x-zip-compressed" #if ($mimeA == "application/x-zip-compressed")selected="selected"#end>$l10n.ZipFormat</option>
<option value="application/x-gzip" #if ($mimeA == "application/x-gzip")selected="selected"#end>$l10n.GZipFormat</option>
<option value="application/octet-stream" #if ($mimeA == "application/octet-stream")selected="selected"#end>$l10n.GenericBinary</option>
#end

