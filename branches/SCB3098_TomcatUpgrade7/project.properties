####################################################################### 
#  
#             _________ B U I L D   S Y S T E M ___.    
#            /   _____/ ____ _____ ____________ \_ |__  
#            \_____  \_/ ___\\__  \\_  __ \__  \ | __ \ 
#            /        \  \___ / __ \|  | \// __ \| \_\ \
#           /_______  /\___  >____  /__|  (____  /___  /
#                   \/     \/     \/           \/    \/ 
#  
#           --------------------------------------------
#               P R O J E C T  -  P R O P E R T I E S
#           --------------------------------------------
#  
#            >>>> CAUTION: DO NOT MODIFY THIS FILE. <<<<
#  
#   Note for developers:
#   NEVER change this file by hand! If you want to introduce a new property,
#   please update
#   
#       scarab_properties.xml 
#   
#   instead and afterwards call
#   
#       maven scarab:update-properties
#       
#   Now the files project.properties, wizzard.properties and minimal.properties 
#   have been regenerated.
#  
#   This file contains Scarab initial property settings.
#   Please refer to the file
#  
#       scarab/README.txt (or to the html documentation)
#  
#   for instructions on how to override these default settings.
#  
#   Quick info for the impatient
#   ============================
#  
#   * If you build Scarab from a source distribution:
#     Please copy (NOT RENAME!) this file (project.properties)
#     to build.properties in the same directory. 
#     Note: The file build.properties intentionally does not exist 
#     in the distribution and can be created 
#     as follows (under unix):
#  
#         cp project.properties build.properties
#   
#     You can now change your settings in build.properties.
#     You may remove all properties you do NOT want to change
#     and keep a small remainder of local property settings in
#     your customized build.properties
#     The file build.properties will never be overridden during 
#     a cvs update operation.
#   
#   * If you install Scarab from a binary distribution:
#     Please copy this file (defaultCustom.properties) to 
#     custom.properties in the same directory. 
#     Note: The file custom.properties exists in the distribution
#     but it is intentionally left empty. It can be created 
#     as follows (under unix):
#  
#         cp defaultCustom.properties custom.properties
#     
#     Now you can change your settings in custom.properties.
#     You may remove all properties you do NOT want to change
#     and keep a small remainder of local property settings
#     in your customized custom.properties
#     The file custom.properties will never be overridden during an 
#     upgrade.
#  
#   Structure of this file
#   ----------------------
#  
#   Below you find several property sections corresponding to different
#   logical Scarab sections. Each section contains specific properties 
#   together with appropriate default settings and basic documentation 
#   about their purpose.
#  
#   Note: Each property has a default factory setting, hence
#   unpacking, installing Scarab followed by creating a
#   default database will result in an "out of the box" Scarab
#   runtime. The out of the box runtime is currently based on 
#   mysql.   
# 
#   $Id$    
# 
# 
#######################################################################


#######################################################################
# Section: DATABASE
######################################################################## 
#  The properties in this section are only needed in the 
#  database creation phase, which is the last thing you do 
#  before you can start Scarab. 
#  
#  Please see the documentation on the website and  README.txt file 
#  for how to configure your specific database setup.
#  
#  uses in Scarab:
#  ---------------
#  
#  ant deploy          (source distribution)
#  ant generate-om     (source distribution)
#  Scarab Setup Wizard (binary distribution)
#  
#  Important for builders (source distribution): 
# 
#  This section allows you to define your runtime 
#  environment together with your build time environment
#  in one specific file (this one).
#  But since the runtime properties must be propagated
#  to the final webapp, these properties will eventually
#  be propagated to the file
#  
#      WEB-INF/conf/defaultCustom.properties
#  
#  This copy is automatically done in the 
#  deploy phase (ant deploy) where the file default.properties 
#  is used as blueprint for the layout, but the property values 
#  are taken from the current user settings, i.e. all of your
#  property modifications from build.properties will show 
#  up in the webapp under WEB-INF/conf/defaultCustom.properties
#  
#  Hence if you build your own instance, defaultCustom.properties
#  will allready contain your individual setup and you can
#  start your instance without further property modifications in
#  the webapp.
#  If you build a generic binary distribution, all you need to
#  do after a fresh checkout will be:
#  
#  ant deploy
#  
#  The result will be a generic binary distribution.
# 
#######################################################################

# --------------------
# scarab.database.type
# --------------------
#
# 
#  This property defines, for which database the
#  Scarab instance shall be built.
#  The following values are currently allowed (the default value
#  is underlined)
#  
#  mysql, postgresql, oracle, hypersonic, mssql, db2
#  -----              
# 

scarab.database.type=mysql


# ============================
# Group: user-authentification
# ============================
#
#   scarab.database.username
#   scarab.database.password
# 
#  This is the username and password that Scarab uses to connect 
#  to the database instance when it's running.
#  Note: The default setting is UNSAFE, because we don't use
#  a password for the connection. Consider changing this in your
#  productive environment.
# 


# ------------------------
# scarab.database.username
# ------------------------
#
# 

scarab.database.username=**GENERATED**

# ------------------------
# scarab.database.password
# ------------------------
#
# 

scarab.database.password=**GENERATED**

# ==================================
# End of Group user-authentification
# ==================================


# =============================
# Group: admin-authentification
# =============================
#
#   scarab.database.admin.username
#   scarab.database.admin.password
#   scarab.database.host
#   scarab.database.port
# 
#  This is the username and password of the database user
#  that should be used to create the Scarab database and
#  tables.
#  Note: The default setting is UNSAFE, because the db admin
#  is set identical to the db user. Consider changing this in your
#  productive environment.
# 


# ------------------------------
# scarab.database.admin.username
# ------------------------------
#
# 
#  Database user to use when creating and seeding the database.
# 

scarab.database.admin.username=**GENERATED**

# ------------------------------
# scarab.database.admin.password
# ------------------------------
#
# 
#  Password to use when creating and seeding the database.
# 

scarab.database.admin.password=**GENERATED**

# --------------------
# scarab.database.host
# --------------------
#
# 
#  The name of the host that the database is running on.
#  Remind, that the host to be used must be known to the
#  box, where the Scarab webapplication is started. The
#  default setting assumes, that the database runs on the 
#  same host as Scarab.
# 

scarab.database.host=localhost

# --------------------
# scarab.database.port
# --------------------
#
# 
#  The port on which the database server is listening for
#  connections.
#  This property is per default generated depending on the property "scarab.database.type".
# 

scarab.database.port=**GENERATED**

# ===================================
# End of Group admin-authentification
# ===================================


# ====================
# Group: database-urls
# ====================
#
#   scarab.database.url
#   scarab.database.admin.url
#   scarab.database.url.extension
#   scarab.database.name
#   scarab.user.username
#   scarab.database.adapter
#   scarab.database.pool.validationQuery
# 
#  These urls denote the JDBC connection strings for your database.
#  scarab.database.url.extension defines the optional parameters
#  to be sent along with the URL, i.e. the String after the "?" .
#  
#  MySQL:
#  The value below is for a standard MySQL database 
#  scarab.database.url = jdbc:mysql://${scarab.database.host}:\
#                     ${scarab.database.port}/\
#                     ${scarab.database.name}?\
#                     ${scarab.database.url.extension}
#  scarab.database.url.extension=
#  
#  The scarab.database.admin.url is used when creating and initially
#  populating a database instance.  
# 


# -------------------
# scarab.database.url
# -------------------
#
# 
#  This property is specific to a database driver and is built up from  
#  other user-specified properties. I guess this goes hand-in-hand with
#  'scarab.database.jdbc.driver'. This property is per default generated 
# ding on the property "scarab.database.type".
# 

scarab.database.url=**GENERATED**

# -------------------------
# scarab.database.admin.url
# -------------------------
#
# 
#  JDBC URL to use when creating and seeding the database.
#  This property is generated depending on the property "scarab.database.type".
# 

scarab.database.admin.url=**GENERATED**

# -----------------------------
# scarab.database.url.extension
# -----------------------------
#
# 
#  This property is per default generated depending on the property "scarab.database.type".
# 

scarab.database.url.extension=**GENERATED**

# --------------------
# scarab.database.name
# --------------------
#
#  
#           The name of the database that Scarab connects to.
#           You will have to change this property only, if your
#           database name differs from the default "scarab"
#           This usually occurs when you plan to run multiple
#           Scarab instances with different databases on the same host. 
#         

scarab.database.name=scarab

# --------------------
# scarab.user.username
# --------------------
#
# 
#  Scarab administration user.
#  This is the account name of the administrator account
#  in Scarab. After installation you can login to Scarab
#  with that user name.
#  Note: The initial password can not be preset here. It 
#        is always set to "1" (one, without the quotes)
#        and can only be changed online from the administrator
#        account.
# 
#  We recommend, that you change the initial password
#  immediately for security reasons.
# 

scarab.user.username=Administrator

# -----------------------
# scarab.database.adapter
# -----------------------
#
# 
#  [FIXME] add documentation, what is this ?
#  How is it related to scarab.database.driver ?
# 

scarab.database.adapter=${scarab.database.type}

# ------------------------------------
# scarab.database.pool.validationQuery
# ------------------------------------
#
# 
#  This property is per default generated depending on the property "scarab.database.type".
# 

scarab.database.pool.validationQuery=**GENERATED**

# ==========================
# End of Group database-urls
# ==========================


# ===================
# Group: driver-items
# ===================
#
#   scarab.database.jdbc.driver
#   scarab.database.jdbc.driver.jar
#   scarab.jdbc.handler
#   scarab.module.code.length
# 
#  
#  mysql (default):
#  scarab.database.jdbc.driver = org.gjt.mm.mysql.Driver
# 
#  hypersonic: 
#  scarab.database.jdbc.driver = org.hsqldb.jdbcDriver
#  
# 


# ---------------------------
# scarab.database.jdbc.driver
# ---------------------------
#
# 
#  The JDBC driver to use for the database connection. We supply standard
#        ones for several databases, but users should have the option to supply
#        their own.
#        This property is per default generated depending on the property "scarab.database.type".
#      

scarab.database.jdbc.driver=**GENERATED**

# -------------------------------
# scarab.database.jdbc.driver.jar
# -------------------------------
#
# 
#  This property is per default generated depending on the property "scarab.database.type".
# 

scarab.database.jdbc.driver.jar=**GENERATED**

# -------------------
# scarab.jdbc.handler
# -------------------
#
# 
#  This property is per default generated depending on the property "scarab.database.type".
# 

scarab.jdbc.handler=**GENERATED**

# -------------------------
# scarab.module.code.length
# -------------------------
#
# 
#  Default length for the Module code. The module code is prepended
#  to each issue id in order to identify the module to which the
#  Issue belongs. There is usually no need to change the default value.
# 

scarab.module.code.length=4

# =========================
# End of Group driver-items
# =========================


#######################################################################
# Section: RUNTIME
######################################################################## 
#  This is the custom settings section for Scarab. These properties
#  affect the runtime behaviour of Scarab. 
#  Alternatively, you may define the value in your web.xml or 
#  server.xml file for Scarab.
#  
#  See http://jakarta.apache.org/commons/configuration/examples.html
#  
#  Note that strings containing "," (comma) characters must backslash 
#  escape the comma (i.e. '\,')
#  
#  For the full set of available properties, see the files
#  
#      src/conf/conf/TurbineResources.properties 
#  
#  Relation to ant build:
#  -------------
#  
#    deploy
# 
#######################################################################


# =============
# Group: module
# =============
#
#   scarab.issue.comment.renderer
# 


# -----------------------------
# scarab.issue.comment.renderer
# -----------------------------
#
# 
#  Scarab can display issue comments in three ways. Either
#  all comments are simply rendered as plaintext ("plaintext", the default),
#  or they are rendered using a very restricted subset of html ("html")
#  or they are rendered using the wiki syntax of the radeox
#  wiki rendering engine ("radeox"). The used rendering engine 
#  can be configured individually for each module from within 
#  the module editor. The value given in this property only
#  defines the default engine to be used when it has not yet
#  been defined in the module.
# 

scarab.issue.comment.renderer=plaintext

# ===================
# End of Group module
# ===================


# ============
# Group: email
# ============
#
#   system.mail.host
#   system.mail.smtp.user
#   system.mail.smtp.pwd
#   system.mail.smtp.debug
#   scarab.email.domain
#   scarab.email.default.fromName
#   system.mail.pseudohtml
#   system.email.html
#   scarab.email.register.fromName
#   scarab.email.forgotpassword.fromName
#   scarab.email.archive.toAddress
#   scarab.email.default.fromAddress
#   scarab.email.register.fromAddress
#   scarab.email.forgotpassword.fromAddress
#   system.mail.smtp.from
# 
#  Following Email related properties are derived properties.
#  Although they can be modified, usually they don't need to be changed.
# 


# ----------------
# system.mail.host
# ----------------
#
# 
#  This is the host on which your Email service runs
#  as seen from Scarab. This is usually a named host, e.g.
#  mailserver.mydomain.com. If the mail service runs
#  on the same host as Scarab, you can use the default (localhost)        
# 

system.mail.host=localhost

# ---------------------
# system.mail.smtp.user
# ---------------------
#
# 
#  Username for the SMTP authentication (if required by the
#  system.mail.host mail server).
# 

system.mail.smtp.user=

# --------------------
# system.mail.smtp.pwd
# --------------------
#
# 
#  Password for the SMTP authentication (if required by the
#  system.mail.host mail server).
# 

system.mail.smtp.pwd=

# ----------------------
# system.mail.smtp.debug
# ----------------------
#
# 
#  Scarab uses the JavaMail API to send email. Set this property to true
#  to enable debug output from that API. This can be helpful in diagnosing
#  problems with sending email from Scarab. Output from JavaMail will
#  appear in the Tomcat log (catalina.out).
#       

system.mail.smtp.debug=false

# -------------------
# scarab.email.domain
# -------------------
#
# 
#  This is the domain on which your Email service rund
#  (the part right from the "@" in the email adress  
# 

scarab.email.domain=example.org

# -----------------------------
# scarab.email.default.fromName
# -----------------------------
#
# 
#  This is the username, Scarab inserts into the FROM part of
#  each Email it sends to the world. Please note, that some
#  Email services insist on finding a locally existing mailuser 
#  in this field.     
#  NOTE: As this will be part of an email address, whitespaces
#  are not allowed.
# 

scarab.email.default.fromName=Administrator

# ----------------------
# system.mail.pseudohtml
# ----------------------
#
# 
#  The emails sent will contains special
#  formating chars (* and _) that are interpreted
#  by some mailer clients (e.g. Thunderbird or Mozilla)
#  as pseudo HTML. As a result, the email will contains 
#  bold and underlined text aimed to make it clearer.
#     

system.mail.pseudohtml=true

# -----------------
# system.email.html
# -----------------
#
# 
#  Email sent by Scarab is always in multi-part/alternate MIME format
#  containing a message section in plain text. If enabled by this
#  property, the plain text is followed by an alternate section with
#  the equivalent message in HTML format. Modern email clients
#  will render the HTML part, while older clients will print
#  the plain part.
#  The alternate HTML messages must be defined by Velocity templates.
#  For any plain text template eg "myTemplate.vm" an alternate
#  HTML template "myTemplateHtml.vm" will be used, if available.
#  If the alternate template is unavailable, or if this property is
#  false, Scarab sends a plain text section only.
#     

system.email.html=true
scarab.email.register.fromName=${scarab.email.default.fromName}
scarab.email.forgotpassword.fromName=${scarab.email.register.fromName}@${scarab.email.domain}
scarab.email.archive.toAddress=${scarab.email.default.fromName}@${scarab.email.domain}

# --------------------------------
# scarab.email.default.fromAddress
# --------------------------------
#
# 
#  The 'from' address for e-mails that are sent by Scarab. I think this
#  generally needs to be a valid e-mail address, or at least a valid
#  domain. I vaguely remember someone having problems because they were
#  using the default from address which had an invalid domain. Something
#  didn't like it.
# 

scarab.email.default.fromAddress=${scarab.email.default.fromName}@${scarab.email.domain}
scarab.email.register.fromAddress=${scarab.email.register.fromName}@${scarab.email.domain}
scarab.email.forgotpassword.fromAddress=${scarab.email.register.fromName}@${scarab.email.domain}
system.mail.smtp.from=${scarab.email.default.fromName}@${scarab.email.domain}

# ==================
# End of Group email
# ==================

# ------------------------------
# scarab.automatic.role.approval
# ------------------------------
#
# 
#  Per default every user request for a role configured in
#  Scarab needs manual approval from a Scarab admnistrator.
#  Sometimes it makes sense to automatically approve for
#  specific roles (e.g. for the Obeserver Role))
#  If you want more, than one role to be automatically
#  approved, write them down as comma separated list,
# 
#  example:  
#  
#  scarab.automatic.role.approval=Developer,Observer,QA,Partner
#  
#  This setting will allow the four roles Developer, Observer, QA and 
#  Partner to be automatically approved (without further manual interaction) 
# 
#  Since all roles can be freely customized in Scarab, we cant't set any
#  default here.
# 

scarab.automatic.role.approval=

# -------------------
# scarab.default.role
# -------------------
#
# 
#  When a user gets registered, no role will be granted automatically
#  for any module. This leads to a problem when the user wants to 
#  request roles for the module. When this property is set, the
#  given role will be auto approved to the user if the user has NO role
#  assigned yet.
# 
#  example:  
#  
#  scarab.default.role=Observer
#  
#  This setting will ensure that users with no role for a particular module
#  will get the role "Observer".
# 
#  Since all roles can be freely customized in Scarab, we cant't set any
#  default here.
# 

scarab.default.role=

# ----------------------
# locale.default.charset
# ----------------------
#
# 
#  The characterset to be used on screen.
#  Example settings:
#  - locale.default.charset=EUC-KR
#  - locale.default.charset=ISO-8859-1
#  - If you want Turbine to determine the characterset dynamically,
#  The default charset is set to UTF-8 for best l10n support.
#  

locale.default.charset=UTF-8

# ---------------------
# scarab.email.encoding
# ---------------------
#
# 
#  Encoding used to send emails.   
#  This property can be set to a native encoding, 
#  though if left unset an encoding generally appropriate
#  for the language used in the email will be used.
#  The default encoding is set to UTF-8 for best l10n support
# 

scarab.email.encoding=UTF-8

# ---------------
# scarab.timezone
# ---------------
#
# 
#  Default timezone for Scarab. The ID must be a valid one (returned from 
#  java.util.TimeZone.getAvailableIds() ) or a format GMT[+|-]hh[[:]mm]
# 

scarab.timezone=GMT+0

# --------------------------
# scarab.datefields.editable
# --------------------------
#
# 
#  If true, the user will be able to edit the date fields. If false, he will
#  be required to use the calendar.      
# 

scarab.datefields.editable=false

# ---------------------------
# scarab.email.replyto.sender
# ---------------------------
#
# 
#  When set to false the ReplyTo field in the scarab generated email will be 
#  the default email address scarab.email.default.fromAddress. 
#  When set to true, ReplyTo is set to the originator
#  of the email, i.e. the one the created or last modified the issue.
# 

scarab.email.replyto.sender=false


# ==============================
# Group: Invalid email addresses
# ==============================
#
#   scarab.register.email.checkValidA
#   scarab.register.email.badEmails
# 
#  These are to try to prevent people from creating bogus accounts
#  on a public server. the first one is for checking if the email address
#  is part of a valid domain which has an A record. the second property
#  is for listing (comma separated) email addresses which are invalid
#  (ex: cypherpunk@cypherpunk.com, test@test.com)    
# 


# ---------------------------------
# scarab.register.email.checkValidA
# ---------------------------------
#
# If true, will check if an email address is from a valid domain with A record

scarab.register.email.checkValidA=true

# -------------------------------
# scarab.register.email.badEmails
# -------------------------------
#
# Listing (comma separated) of invalid email addresses.

scarab.register.email.badEmails=test@test.com,cypherpunk@cypherpunk.com,abc@abc.com,foo@foo.com,spam@foo.com

# ====================================
# End of Group Invalid email addresses
# ====================================

# ----------------------------
# scarab.login.password.expire
# ----------------------------
#
# 
#  Period in days a login password will last before a new one must be entered.
#  Leave blank if the password should never expire.
#  

scarab.login.password.expire=30


# ==================
# Group: NTLM domain
# ==================
#
#   scarab.login.ntlm.active
#   scarab.login.ntlm.domain
# 
#  These properties will allow Scarab to try to authenticate users against a
#  NTLM domain (windows network), using credentials provided by the browser.
#  
# b ships with an empty implementation jar for the JCIFS library. To activate this
# re you'll need to download the real implementation and replace the shipped jcifs.jar
# it.
# 
# an download it from:
# 
# p://jcifs.samba.org (official site)
# p://www.ibiblio.org/maven/org.samba.jcifs/jars/jcifs-1.2.6.jar (tested version)
#  
# 


# ------------------------
# scarab.login.ntlm.active
# ------------------------
#
# 
#  If set to true, the system will try to authenticate users against an NTLM domain.
#  This property needs scarab.login.ntlm.domain to work.
#  

scarab.login.ntlm.active=false

# ------------------------
# scarab.login.ntlm.domain
# ------------------------
#
# 
#  The name of the NTLM domain to authenticate users, if scarab.login.ntlm.active is TRUE.
#  

scarab.login.ntlm.domain=

# ========================
# End of Group NTLM domain
# ========================


# ==========================
# Group: LDAP authentication
# ==========================
#
#   scarab.login.ldap.synchronizeOnStartUp
#   scarab.login.ldap.providerFactory
#   scarab.login.ldap.providerUrl
#   scarab.login.ldap.ldapQuery
#   scarab.login.ldap.baseDn
# 


# --------------------------------------
# scarab.login.ldap.synchronizeOnStartUp
# --------------------------------------
#
# 
# 	This property lets you choose to synchronize the database with
# 	the useraccounts in the LDAP server during intialization of the
# 	ScarabLDAPDBSecurityService. (true/false)    	
#     	

scarab.login.ldap.synchronizeOnStartUp=true

# ---------------------------------
# scarab.login.ldap.providerFactory
# ---------------------------------
#
# 
# 	This property lets you choose the LDAP providerfactory instead of relying
# 	on the default settings for your container (from jndi.properties usually). 
#     	

scarab.login.ldap.providerFactory=com.sun.jndi.ldap.LdapCtxFactory

# -----------------------------
# scarab.login.ldap.providerUrl
# -----------------------------
#
# 
# 	This property lets you choose the LDAP providerURL instead of relying
# 	on the default settings for your container (from jndi.properties usually). 
#     	

scarab.login.ldap.providerUrl=ldap://localhost/

# ---------------------------
# scarab.login.ldap.ldapQuery
# ---------------------------
#
# 
# 	This property lets you choose to limit the records returned by using the
# 	LDAP query you provide here. This is to avoid to add dummy accounts which
# 	do not correspond to real users and might have weak passwords 
#     	

scarab.login.ldap.ldapQuery=(objectClass=posixAccount)

# ------------------------
# scarab.login.ldap.baseDn
# ------------------------
#
# 
# 	This property lets you choose to limit the records returned by specifying
# 	the base dn for LDAP below which to search for records.       	
#     	

scarab.login.ldap.baseDn=dc=example,dc=com

# ================================
# End of Group LDAP authentication
# ================================


# ===============
# Group: Workflow
# ===============
#
#   scarab.workflow.classname
#   scarab.notificationmanager.classname
#   scarab.notificationmanager.issuequiettime
#   scarab.instance.id
#   scarab.common.status.id
#   scarab.common.status.sealed
#   scarab.common.status.onhold
#   scarab.common.status.onhold.dateProperty
#   scarab.common.status.onhold.reminder.period
#   scarab.common.status.activity.reminder.exclude.states
#   scarab.common.status.activity.reminder.include.states
#   scarab.common.status.activity.reminder.period
#   scarab.common.status.sealed.modifyPermission
#   scarab.common.assignedTo
#   scarab.common.assignedCC
# 
#  Helper properties for the workflow.
#  Note: Some of these properties are temporary "hacks"
#  until the workflow engine has been improved in such a
#  way that it can be configured through the Webinterface.        
# 


# -------------------------
# scarab.workflow.classname
# -------------------------
#
# 
#  The workflow tool to be used by Scarab.
#  

scarab.workflow.classname=org.tigris.scarab.workflow.CheapWorkflow

# ------------------------------------
# scarab.notificationmanager.classname
# ------------------------------------
#
# 
#  The implementation of NotificationManager to be used by Scarab.
#  

scarab.notificationmanager.classname=org.tigris.scarab.notification.ScarabNotificationManager

# -----------------------------------------
# scarab.notificationmanager.issuequiettime
# -----------------------------------------
#
# 
#  Waiting time after which all queued notifications for an issue
#  are sent to their recipients. The waiting time is measured begining
#  from the time of last activity on the issue until the current 
#  time. Time unit is [msec], e.g. 300000 is equivalent to a
#  waiting time of 5 minutes.
#  

scarab.notificationmanager.issuequiettime=300000

# ------------------
# scarab.instance.id
# ------------------
#
# 
#  This name will be used to distinguish specific scarab instances
#  from other instances that it may interact with (in the future).
#  It is the prefix to all issue ids created in response to an 
#  issue entered against a module in this instance's database.
#  per default this value is set to "local" .
# 

scarab.instance.id=local

# -----------------------
# scarab.common.status.id
# -----------------------
#
# 
#  Every issue tracking system has got an attribute, that keeps
#  the current status of the handled issues, i.e. it stores whether
#  an issue has been created, closed, reopened and so on.
#  This is also true for Scarab. But since Scarab is highly
#  configurable, this attribute can have virtually ANY name
#  and it even (theoretically) can change from issue type
#  to issue type and/or from module to module.
#  In the Scarab sample data the common attribute that handles
#  the issue status information is the attribute "status".
#  If your instance uses a different common attribute for this
#  purpose, you may modify this property accordingly.
#  At the moment we only support ONE single attribute name here
#  assuming that it makes sense to handle this uniquely within a
#  given instance. And the only place where we use this property 
#  is during generation of the E-Mail headers for issue change
#  notifications.
# 

scarab.common.status.id=status

# ---------------------------
# scarab.common.status.sealed
# ---------------------------
#
# 
#  A sealed issue is meant to be immutable.
#  That could be because it is closed, or has put into an
#  "unchangeable" state or whatever else is required. 
#  The given issue is recognized as sealed when the status attribute
#  been set to the given value. The default behaviour is:
# ue is sealed if (status == closed)
# 

scarab.common.status.sealed=closed

# ---------------------------
# scarab.common.status.onhold
# ---------------------------
#
# 
#  An "onhold" issue is typically an issue, which can not be processed
#  right now, but has been postponed to a later time. onHold issues
#  typically also transport a "reactivation date". Note that the here
#  used model is very simplistic: An isue is recognized as onhold when
#  its state value has been set to "onhold", i.e. for the default settings:
#  Issue is onhold if (state=="onhold")
# 

scarab.common.status.onhold=onhold

# ----------------------------------------
# scarab.common.status.onhold.dateProperty
# ----------------------------------------
#
# 
#  This is the attribute which contains the attribute name of 
#  the reactivation date for "onhold" issues.          
# 

scarab.common.status.onhold.dateProperty=onhold

# -------------------------------------------
# scarab.common.status.onhold.reminder.period
# -------------------------------------------
#
# 
#  This attribute tells the NotificationManager how long to wait
# en sending reminder notifications for issues in state onhold.
# nit is minutes. The default setting is 1440 (1 day)
# 

scarab.common.status.onhold.reminder.period=1440

# -----------------------------------------------------
# scarab.common.status.activity.reminder.exclude.states
# -----------------------------------------------------
#
# 
#  Whenever an issue hangs during the course of its processing, a reminder
# ication shall be sent out to the participants. This property
# es a comma separated list of $state values for which the reminder
#  NOT be issued. By default we exclude "onhold" and "closed" for
# wing reasons: "closed" issues are meant to keep idle forever. 
# ere is no need to remind anybody of that!
# ld" issues are handled elsewhere and again there is no reason to
#  anybody either.
# 

scarab.common.status.activity.reminder.exclude.states=onhold,closed

# -----------------------------------------------------
# scarab.common.status.activity.reminder.include.states
# -----------------------------------------------------
#
# 
#  Whenever an issue hangs during the course of its processing, a reminder
# ication shall be sent out to the participants. This property
# es a comma separated list of $state values for which the reminder
# be performed. By default this property is empty. Hence we process
# s in ANY state except those mentioned above in
# 
# b.common.status.activity.reminder.exclude.states. 
# 
# u want to explicitly define the states for which a reminder must be sent,
# an create a comma separated list of state values here.
# 
# TANT: 
# include.states AND exclude.states both are empty, then no reminder
# nt out at all.
# only one of the two properties is set then the according inclusion/exclusion
#  place.
# both properties are set, then the exclusion property is ignored!
# 

scarab.common.status.activity.reminder.include.states=

# ---------------------------------------------
# scarab.common.status.activity.reminder.period
# ---------------------------------------------
#
# 
#  This attribute tells the NotificationManager how long to wait
#  it sends a reminder notification for issues in any state found in the
# des.state list or not found in the excludes.state list (see above).
# efault setting is 1440 (1 day)
# 

scarab.common.status.activity.reminder.period=1440

# --------------------------------------------
# scarab.common.status.sealed.modifyPermission
# --------------------------------------------
#
# 
#  When the given issue is in $status=$sealed (aka status=closed)
#  then the required edit permission will be determined by this
#  property (default = Domain__Edit)
# 

scarab.common.status.sealed.modifyPermission=Domain | Edit

# ------------------------
# scarab.common.assignedTo
# ------------------------
#
# 
#  This is the name of the user attribute which contains "assigned to" information.
# 

scarab.common.assignedTo=AssignedTo

# ------------------------
# scarab.common.assignedCC
# ------------------------
#
# 
#  This is the name of the user attribute which contains "assigned cc" information.
# 

scarab.common.assignedCC=AssignedCC

# =====================
# End of Group Workflow
# =====================


# =========================
# Group: Turbine-properties
# =========================
#
#   session.timeout
#   services.UploadService.repository
#   services.VelocityService.input.encoding
#   searchindex.path
#   searchindex.analyzerClass
# 
#  Turbine related properties
# 
#  note: Session timeout unit = [sec]:
# 

session.timeout=1800
services.UploadService.repository=WEB-INF

# ---------------------------------------
# services.VelocityService.input.encoding
# ---------------------------------------
#
# 
#  Normally all Velocity macros will be read in as ISO-8859-1.
#  If you want your macros to be interpreted with another encoding,
#  you can change this property here.
#  Note: It generally makes sense to set this property to UTF-8
#  when you decide to internationalize your Scarab instance!
# 

services.VelocityService.input.encoding=ISO-8859-1

# ----------------
# searchindex.path
# ----------------
#
# Path where e.g. Lucene will store its index files.

searchindex.path=WEB-INF/index

# -------------------------
# searchindex.analyzerClass
# -------------------------
#
#  
#           Analyzer class which Lucene uses to index text entered into Scarab.
#           
#           The default Analyzer is optimized for indexing English text.
#           If your Scarab contains mostly non-English text you may want to
#           switch to an Analyzer optimized for your language.
#           Eg. for German you could use: org.apache.lucene.analysis.de.GermanAnalyzer
#           The package org.apache.lucene.analysis contains Analyzers for a lot of
#           other Languages.
#           Of course you are free to write your own Analyzer. 
#         

searchindex.analyzerClass=org.tigris.scarab.util.word.PorterStemAnalyzer

# ===============================
# End of Group Turbine-properties
# ===============================


# ================
# Group: appserver
# ================
#
#   scarab.http.scheme
#   scarab.http.domain
#   scarab.http.port
#   scarab.context
#   email.notification.host
#   email.notification.port
#   email.notification.uri
#   scarab.http.scriptname
#   scarab.attachment.remove.permanent
#   scarab.attachments.repository
# 
#  Application server related properties
#  
#  scarab.http.scheme is the protocol to be used. In most situations 
#  this will be "http" (the default setting). 
#  In rare situations you may want to use "https". In that case 
#  you will also have to setup your appserver to support https.
#  
#  scarab.http.domain is the www adress under which your scarab instance 
#  is served, e.g. www.mydomain.com
#  
#  scarab.http.port is the (optional) port under which your scarab 
#  instance is served, e.g. 8080. If you are running your appserver 
#  through a http-proxy or directly on port 80, please set
#  
#      scarab.http.port=80
#  
#  scarab.context is the webapplication context under which your scarab 
#  instance is adressed on the appserver, e.g. "scarab"
# 
#  The default setting resolves to:
#  
#      http://localhost:8080/scarab
# 
# 


# ------------------
# scarab.http.scheme
# ------------------
#
# 
#  Drop this? I guess that this is used for generating e-mail
#  links.
# 

scarab.http.scheme=http

# ------------------
# scarab.http.domain
# ------------------
#
# 
#  This also appears in the database, and I'm really not sure
#  what to do about it. It causes a lot of problems with the
#  generated e-mail links.
# 

scarab.http.domain=localhost

# ----------------
# scarab.http.port
# ----------------
#
# See 'scarab.http.domain'.

scarab.http.port=8080

# --------------
# scarab.context
# --------------
#
# 
#  What shall we do with this? Normally the context comes from
#  the name of the deployed WAR file, unless a different context
#  name is configured in server.xml. Maybe just allow the user
#  to configure the context name via server.xml directly?
# 

scarab.context=scarab

# -----------------------
# email.notification.host
# -----------------------
#
# 
#  This property is considered experimental at the moment. 
# y be possible, that it will be dropped in favor to a more generic solution.
# 

email.notification.host=

# -----------------------
# email.notification.port
# -----------------------
#
# 
#  This property is considered experimental at the moment. 
# y be possible, that it will be dropped in favor to a more generic solution.
# 

email.notification.port=80

# ----------------------
# email.notification.uri
# ----------------------
#
# 
#  In some cases, the Link generated within an email notification differs from the link
#   generated for online usage. This is in particular true, if Scarab runs within a
#   secure access environment (like Juniper SA as an example). In that case the URL
#   which is generated by Scarab will be rewritten by the secure access system. But since
#   the Email notification does not pass the secure system, the link needs to be rewritten
#   by Scarab itself. This property contains the template to be used in that case.
#   If the property is empty, the default scarab email link will be generated.
#   The working template for Juniper-SA is:
#   
#   email.notification.uri=${email.notification.host}:${email.notification.port}/${scarab.context}/issues/id/${issueId}\,DanaInfo=${scarab.http.domain}\,Port=${scarab.http.port}
# 
#         Note that you must escape the commas, otherwise the string will be interpreted as a comma separated list of values!
# 
#         This property is considered experimental at the moment. 
#   It may be possible, that it will be dropped in favor to a more generic solution.
#       

email.notification.uri=

# ----------------------
# scarab.http.scriptname
# ----------------------
#
# 
#  This property must NEVER be modified.
#  They will eventually be removed from this file.
# 

scarab.http.scriptname=/${scarab.context}/issues

# ----------------------------------
# scarab.attachment.remove.permanent
# ----------------------------------
#
# 
#  If set to "false" all file attachments will be kept on 
#  disk, when the associations to the attachments are removed 
#  from their issues. If you change this property to "true"
#  the files will also be removed physically.
# 

scarab.attachment.remove.permanent=false

# -----------------------------
# scarab.attachments.repository
# -----------------------------
#
# 
#  This property defines the location of the directory in which 
#  all attachments will be stored.
# 

scarab.attachments.repository=WEB-INF/attachments

# ======================
# End of Group appserver
# ======================


# ============
# Group: dhtml
# ============
#
#   scarab.dhtml.hide_bars
#   scarab.dhtml.autoresize_textarea
# 
#  DHTML properties
# 
#  These properties control the DTHML features. 
#  Set a property to true in order to enable it.
# 


# ----------------------
# scarab.dhtml.hide_bars
# ----------------------
#
# 
#  scarab.dhtml.hide_bars enables hiding the top blue bar 
#  and the left nav bar by double clicking on it
# 

scarab.dhtml.hide_bars=true

# --------------------------------
# scarab.dhtml.autoresize_textarea
# --------------------------------
#
# 
#  scarab.dhtml.autoresize_textarea enables textareas to 
#  automatically adjust the number of rows. 
# 

scarab.dhtml.autoresize_textarea=true

# ==================
# End of Group dhtml
# ==================


# ================
# Group: behaviour
# ================
#
#   scarab.edit.behaviour
#   scarab.extended.footer
# 
#  The property scarab.edit.behaviour tells scarab, if an assigned user
#  shall open the issue editor in edit mode by default.
#  Note: This an experimental feature.
# 
# 


# ---------------------
# scarab.edit.behaviour
# ---------------------
#
# 
#  scarab.edit.behaviour=[default|smart]
#  A user assigned to an issue typically opens the assigned issue
#  for edit and not for view, while all observers typically behave 
#  in the opposite way, i.e. they watch the issue, but do not edit it.
#  If this property is set to "smart", then Scarab will automatically
#  determine the default entry mode from the value of the associated 
#  user attribute. Hence, if the user is assigned to the issue, 
#  the attributes editor will open in edit mode, otherwise in view-mode.
# 

scarab.edit.behaviour=default

# ----------------------
# scarab.extended.footer
# ----------------------
#
# 
#  Issues can be assigned, moved and deleted. This functionality
#  is placed in the Issue Footer by default.
#  Sometimes all these functions are not necessary for "normal users"
#  In that case the footer can be disabled by setting this attribute
#  to false.
# 

scarab.extended.footer=true

# ======================
# End of Group behaviour
# ======================


# ======================
# Group: site-decoration
# ======================
#
#   scarab.product.logo
#   scarab.site.name
#   scarab.site.logo
#   scarab.site.style
# 
#  The scarab.site.name is a text snippet, which will be placed into the top
#  bar of every browser page. Here you can place an instance specific name.
#  default is empty.
# 
#  The scarab.site.logo allows to add a custom specific site logo right to
#  the text snippet ${scarab.site.name}. The value has to be specified as 
#  absolute path. The path root is equal to the webapp root. e.g. when 
#  you specify "/mylogo.gif" you must place the logo into the 
#  webapplication root.
# 


# -------------------
# scarab.product.logo
# -------------------
#
# 
#  The product.logo is displayed on the left side of the top bar.
#  Here you can add remove the product logo or replace it with your own
#  logo. The default setting displays the Scarab-Logo.
#  Hide it by replacing the value with "/images/trans.gif"
# 

scarab.product.logo=/images/logo.gif

# ----------------
# scarab.site.name
# ----------------
#
# 
#  The scarab.site.name is the name of your personal
#  scarab instance. it is diplayed in the top-bar centered
#  to the middle. It may contain any HTML-construct. You should take
#  care on the visible constraints (if your construct consumes
#  too much space it may destroy the Scarab layout!)
#  It is nbest advice to enter a short text only message here.
#  This text is accompanied with the scarab.site.logo, see below.
# 

scarab.site.name=

# ----------------
# scarab.site.logo
# ----------------
#
# 
#  The site.logo is displayed centered at the top bar.
#  Here you can add your own logo. It is rendered left
#  to the scarab.site.name (see above).
#  The default setting displays a null-image (transparent
#  thus invisible)
# 

scarab.site.logo=/images/trans.gif

# -----------------
# scarab.site.style
# -----------------
#
# 
#  The site.style determines which overall design
#  shall be used for scarab.
#  The default style is "classic".
#  If you change the style here, you also have to provide a
#  css style file in $scarab_root/WEB_INF/skins
#  with the same name.
# 

scarab.site.style=classic

# ============================
# End of Group site-decoration
# ============================


# ==========================
# Group: user-administration
# ==========================
#
#   scarab.admin.password.reset.allowed
#   scarab.anonymous.enable
#   scarab.anonymous.username
#   scarab.anonymous.rolename
#   scarab.public.modules.display.count
# 


# -----------------------------------
# scarab.admin.password.reset.allowed
# -----------------------------------
#
# 
#  This property controls, whether the administrator 
#  may reset the password of other users. Per default
#  this property is set to false.
# 

scarab.admin.password.reset.allowed=true

# -----------------------
# scarab.anonymous.enable
# -----------------------
#
# 
#  If this property is set to true, anonymous login will be enabled,
#  using the user stated in scarab.anonymous.username 
#  Note: the anonymous user account must exisst in the database.
#  If you do not want an anonymous user, please set this property 
#  to false:
# 
#      scarab.anonymous.enable=false
# 
# 

scarab.anonymous.enable=true

# -------------------------
# scarab.anonymous.username
# -------------------------
#
# 
#  Choose which user will act as Anonymous user.  
#  This property will only be used if
#  
#      scarab.anonymous.enable=true
# 

scarab.anonymous.username=anonymous

# -------------------------
# scarab.anonymous.rolename
# -------------------------
#
# 
#  Choose which role will hold the permissions for anonymous access.
#  This property will only be used if
#  
#      scarab.anonymous.enable=true
# 

scarab.anonymous.rolename=Anonymous

# -----------------------------------
# scarab.public.modules.display.count
# -----------------------------------
#
# 
#  If Anonymous login is enabled, this property controls, 
#  how many public modules are shown on the Login screen.
#  Following values are allowed:
#   0 : Don't display public modules on the Login screen
#  >0 : Display at maximum the specified amount of public modules
# 

scarab.public.modules.display.count=99999

# ================================
# End of Group user-administration
# ================================


# =================
# Group: dataexport
# =================
#
#   scarab.dataexport.encoding
# 


# --------------------------
# scarab.dataexport.encoding
# --------------------------
#
# Encoding to be used for data exports, including XML, TSV and XLS outputs.

scarab.dataexport.encoding=UTF-8

# =======================
# End of Group dataexport
# =======================

# ---------------------
# scarab.issue.max.view
# ---------------------
#
# Max number of issues that can be be viewed simultaneously on a single page.

scarab.issue.max.view=25

# -----------------------
# scarab.issue.max.assign
# -----------------------
#
# Max number of issues that can be be simultaneously assigned with users.

scarab.issue.max.assign=25

# ---------------------
# scarab.issue.max.move
# ---------------------
#
# Max number of issues that can be moved in one shot.

scarab.issue.max.move=250

# ---------------------
# scarab.issue.max.copy
# ---------------------
#
# Max number of issues that can be copied in one shot.

scarab.issue.max.copy=25

# -----------------------------------------------------
# scarab.issue.dependencies.additionalDisplayAttributes
# -----------------------------------------------------
#
# Additional Attributes which are displayed for in the Dependencies-Tab.

scarab.issue.dependencies.additionalDisplayAttributes=

# ---------------------------------
# scarab.viewIssue.singleScreenOnly
# ---------------------------------
#
# Scarab.properties key for restricting viewIssue to long form (single screen).

scarab.viewIssue.singleScreenOnly=false


#######################################################################
# Section: MIGRATION
######################################################################## 
#  These are some default values that are required for
#  the b18-b19 migration build target. DO NOT MODIFY THEM!
#  
# rrently it seems these properties (and the "b18-b19" task)
# e not used/needed anymore - EXCEPT "scarab.file.max.size"!!
# 
#  Relation to ant build:
#  ----------------------
#  This section directly corresponds to the ant task
#  
#    migrate-b18-b19  
# 
#######################################################################
scarab.tomcat.http.port=8080
scarab.tomcat.shutdown.port=8005
scarab.webapp.reloadable=true
scarab.webapp.checkInterval=2
scarab.welcome.file=index.html

# --------------------
# scarab.file.max.size
# --------------------
#
# Maximum file size for file uploads/attachments.

scarab.file.max.size=157286400
scarab.tomcat.proxy.name=
scarab.tomcat.proxy.port=


#######################################################################
# Section: PROPERTY-MAPS
######################################################################## 
#  Following mappings are fixed and shall never be changed!
#  [FIXME] [HD]Maybe they should better move to TurbineResources.properties ?
# 
#######################################################################
torque.database.scarab.adapter=${scarab.database.adapter}
torque.dsfactory.scarab.pool.validationQuery=${scarab.database.pool.validationQuery}
torque.dsfactory.scarab.connection.driver=${scarab.database.jdbc.driver}
torque.dsfactory.scarab.connection.url=${scarab.database.url}
torque.dsfactory.scarab.connection.user=${scarab.database.username}
torque.dsfactory.scarab.connection.password=${scarab.database.password}


#######################################################################
# Section: SETUP WIZARD
######################################################################## 
#  The properties defined in this section are used
#  to provide the Setup Wizard with default values.
# 
#######################################################################

# ----
# jdbc
# ----
#
# 
#  nasty trick. used for the SetupWizard only
#  quick explanation: The setup Wizzard does not resolve values
#                     starting with "${" .
#                     This is intended so that we can use the
#                     ${} notation also in the wizzard properties.
#                     So if we want to keep the dynamic character 
#                     of the variable, it must start with "${" . 
#                     Otherwise it would be fully resolved.
#                     See the property [scarab.database.url.mysql] 
#                     below to see what i mean [HD].
# 

jdbc=jdbc


# ============
# Group: MySQL
# ============
#
#   scarab.jdbc.handler.mysql
#   scarab.database.port.mysql
#   scarab.database.admin.url.mysql
#   scarab.database.url.mysql
#   scarab.database.url.extension.mysql
#   scarab.database.pool.validationQuery.mysql
#   scarab.database.jdbc.driver.mysql
#   scarab.database.admin.username.mysql
#   scarab.database.admin.password.mysql
#   scarab.database.username.mysql
#   scarab.database.password.mysql
#   scarab.test.database.name.mysql
#   scarab.test.database.url.mysql
#   scarab.test.database.username.mysql
#   scarab.test.database.password.mysql
#   scarab.database.jdbc.driver.jar.mysql
# 
#  Default settings for MySQL
# 

scarab.jdbc.handler.mysql=mysql
scarab.database.port.mysql=3306
scarab.database.admin.url.mysql=${jdbc}:${scarab.jdbc.handler}://${scarab.database.host}:${scarab.database.port}/?
scarab.database.url.mysql=${jdbc}:${scarab.jdbc.handler}://${scarab.database.host}:${scarab.database.port}/${scarab.database.name}?zeroDateTimeBehavior=convertToNull&${scarab.database.url.extension}

# -----------------------------------
# scarab.database.url.extension.mysql
# -----------------------------------
#
# 
#  scarab.database.url.extension.mysql       = useUnicode=true&characterEncoding=utf8
# 

scarab.database.url.extension.mysql=
scarab.database.pool.validationQuery.mysql=SELECT 1
scarab.database.jdbc.driver.mysql=org.gjt.mm.mysql.Driver
scarab.database.admin.username.mysql=root
scarab.database.admin.password.mysql=
scarab.database.username.mysql=root
scarab.database.password.mysql=
scarab.test.database.name.mysql=${scarab.database.name}
scarab.test.database.url.mysql=${jdbc}:mysql://${scarab.database.host}:${scarab.database.port}/${scarab.test.database.name}
scarab.test.database.username.mysql=${scarab.database.username}
scarab.test.database.password.mysql=${scarab.database.password}
scarab.database.jdbc.driver.jar.mysql=mysql-*.jar

# ==================
# End of Group MySQL
# ==================


# ===============
# Group: postgres
# ===============
#
#   scarab.jdbc.handler.postgresql
#   scarab.database.port.postgresql
#   scarab.database.admin.url.postgresql
#   scarab.database.url.postgresql
#   scarab.database.url.extension.postgresql
#   scarab.database.pool.validationQuery.postgresql
#   scarab.database.jdbc.driver.postgresql
#   scarab.database.admin.username.postgresql
#   scarab.database.admin.password.postgresql
#   scarab.database.username.postgresql
#   scarab.database.password.postgresql
#   scarab.test.database.name.postgresql
#   scarab.test.database.url.postgresql
#   scarab.test.database.username.postgresql
#   scarab.test.database.password.postgresql
#   scarab.database.jdbc.driver.jar.postgres
# 
#  Default settings for Postgres
# 

scarab.jdbc.handler.postgresql=postgres
scarab.database.port.postgresql=5432
scarab.database.admin.url.postgresql=${jdbc}:postgresql://${scarab.database.host}:${scarab.database.port}/template1
scarab.database.url.postgresql=${jdbc}:postgresql://${scarab.database.host}:${scarab.database.port}/${scarab.database.name}
scarab.database.url.extension.postgresql=
scarab.database.pool.validationQuery.postgresql=SELECT 1
scarab.database.jdbc.driver.postgresql=org.postgresql.Driver
scarab.database.admin.username.postgresql=postgres
scarab.database.admin.password.postgresql=
scarab.database.username.postgresql=sa
scarab.database.password.postgresql=
scarab.test.database.name.postgresql=${scarab.database.name}
scarab.test.database.url.postgresql=${jdbc}:postgresql://${scarab.database.host}:${scarab.database.port}/${scarab.database.name}
scarab.test.database.username.postgresql=${scarab.database.username}
scarab.test.database.password.postgresql=${scarab.database.password}
scarab.database.jdbc.driver.jar.postgres=postgresql-*.jar

# =====================
# End of Group postgres
# =====================


# =================
# Group: hypersonic
# =================
#
#   hsqldb.database
#   hsqldb.dbname
#   scarab.jdbc.handler.hypersonic
#   scarab.database.port.hypersonic
#   scarab.database.admin.url.hypersonic
#   scarab.database.url.hypersonic
#   scarab.database.url.extension.hypersonic
#   scarab.database.pool.validationQuery.hypersonic
#   scarab.database.jdbc.driver.hypersonic
#   scarab.database.admin.username.hypersonic
#   scarab.database.admin.password.hypersonic
#   scarab.database.username.hypersonic
#   scarab.database.password.hypersonic
#   scarab.test.database.name.hypersonic
#   scarab.test.database.url.hypersonic
#   scarab.test.database.username.hypersonic
#   scarab.test.database.password.hypersonic
#   scarab.database.jdbc.driver.jar.hypersonic
# 
#  Default settings for hypersonic
# 

hsqldb.database=hsqldb
hsqldb.dbname=${scarab.database.name}
scarab.jdbc.handler.hypersonic=hsqldb
scarab.database.port.hypersonic=3306
scarab.database.admin.url.hypersonic=jdbc:hsqldb:file:${applicationRoot}/embedded_hsqldb/${hsqldb.dbname};shutdown=true
scarab.database.url.hypersonic=jdbc:hsqldb:file:${applicationRoot}/embedded_hsqldb/${hsqldb.dbname};shutdown=true
scarab.database.url.extension.hypersonic=
scarab.database.pool.validationQuery.hypersonic=SELECT ATTRIBUTE_ID FROM SCARAB_ATTRIBUTE WHERE ATTRIBUTE_ID='0'
scarab.database.jdbc.driver.hypersonic=org.hsqldb.jdbcDriver
scarab.database.admin.username.hypersonic=${scarab.database.username}
scarab.database.admin.password.hypersonic=${scarab.database.password}
scarab.database.username.hypersonic=sa
scarab.database.password.hypersonic=
scarab.test.database.name.hypersonic=${scarab.database.name}
scarab.test.database.url.hypersonic=${jdbc}:hsqldb:.
scarab.test.database.username.hypersonic=${scarab.database.username}
scarab.test.database.password.hypersonic=${scarab.database.password}
scarab.database.jdbc.driver.jar.hypersonic=hsqldb*.jar

# =======================
# End of Group hypersonic
# =======================


# ============
# Group: mssql
# ============
#
#   scarab.jdbc.handler.mssql
#   scarab.database.port.mssql
#   scarab.database.admin.url.mssql
#   scarab.database.url.mssql
#   scarab.database.url.extension.mssql
#   scarab.database.pool.validationQuery.mssql
#   scarab.database.jdbc.driver.mssql
#   scarab.database.admin.username.mssql
#   scarab.database.admin.password.mssql
#   scarab.database.username.mssql
#   scarab.database.password.mssql
#   scarab.test.database.name.mssql
#   scarab.test.database.url.mssql
#   scarab.test.database.username.mssql
#   scarab.test.database.password.mssql
#   scarab.database.jdbc.driver.jar.mssql
#   scarab.database.manual.creation.mssql
# 
#  Default settings for mssql
# 

scarab.jdbc.handler.mssql=mssql
scarab.database.port.mssql=1433
scarab.database.admin.url.mssql=${jdbc}:microsoft:sqlserver://${scarab.database.host}:${scarab.database.port};DatabaseName=${scarab.database.name};SelectMethod=cursor
scarab.database.url.mssql=${jdbc}:microsoft:sqlserver://${scarab.database.host}:${scarab.database.port};DatabaseName=${scarab.database.name};SelectMethod=cursor
scarab.database.url.extension.mssql=
scarab.database.pool.validationQuery.mssql=SELECT 1
scarab.database.jdbc.driver.mssql=com.microsoft.jdbc.sqlserver.SQLServerDriver
scarab.database.admin.username.mssql=${scarab.database.username}
scarab.database.admin.password.mssql=${scarab.database.password}
scarab.database.username.mssql=sa
scarab.database.password.mssql=
scarab.test.database.name.mssql=${scarab.database.name}
scarab.test.database.url.mssql=${jdbc}:microsoft:sqlserver://${scarab.database.host}:${scarab.database.port};DatabaseName=${scarab.test.database.name};SelectMethod=cursor
scarab.test.database.username.mssql=${scarab.database.username}
scarab.test.database.password.mssql=${scarab.database.password}
scarab.database.jdbc.driver.jar.mssql=ms*.jar
scarab.database.manual.creation.mssql=true

# ==================
# End of Group mssql
# ==================


# =============
# Group: oracle
# =============
#
#   scarab.jdbc.handler.oracle
#   scarab.database.port.oracle
#   scarab.database.admin.url.oracle
#   scarab.database.url.oracle
#   scarab.database.url.extensionoracle
#   scarab.database.pool.validationQuery.oracle
#   scarab.database.jdbc.driver.oracle
#   scarab.database.admin.username.oracle
#   scarab.database.admin.password.oracle
#   scarab.database.username.oracle
#   scarab.database.password.oracle
#   scarab.test.database.name.oracle
#   scarab.test.database.url.oracle
#   scarab.test.database.username.oracle
#   scarab.test.database.password.oracle
#   scarab.database.jdbc.driver.jar.oracle
# 
#  Default settings for oracle
# 

scarab.jdbc.handler.oracle=oracle
scarab.database.port.oracle=
scarab.database.admin.url.oracle=
scarab.database.url.oracle=
scarab.database.url.extensionoracle=
scarab.database.pool.validationQuery.oracle=SELECT 1 FROM DUAL
scarab.database.jdbc.driver.oracle=oracle.jdbc.driver.OracleDriver
scarab.database.admin.username.oracle=${scarab.database.username}
scarab.database.admin.password.oracle=${scarab.database.password}
scarab.database.username.oracle=sa
scarab.database.password.oracle=
scarab.test.database.name.oracle=${scarab.database.name}
scarab.test.database.url.oracle=
scarab.test.database.username.oracle=${scarab.database.username}
scarab.test.database.password.oracle=${scarab.database.password}
scarab.database.jdbc.driver.jar.oracle=oracle-*.jar

# ===================
# End of Group oracle
# ===================


# ==========
# Group: db2
# ==========
#
#   scarab.jdbc.handler.db2
#   scarab.database.port.db2
#   scarab.database.admin.url.db2
#   scarab.database.url.db2
#   scarab.database.url.extension.db2
#   scarab.database.pool.validationQuery.db2
#   scarab.database.jdbc.driver.db2
#   scarab.database.admin.username.db2
#   scarab.database.admin.password.db2
#   scarab.database.username.db2
#   scarab.database.password.db2
#   scarab.test.database.name.db2
#   scarab.test.database.url.db2
#   scarab.test.database.username.db2
#   scarab.test.database.password.db2
#   scarab.database.jdbc.driver.jar.db2
# 
#  Default settings for db2
# 

scarab.jdbc.handler.db2=db2
scarab.database.port.db2=
scarab.database.admin.url.db2=jdbc:db2:${scarab.database.name}
scarab.database.url.db2=jdbc:db2:${scarab.database.name}
scarab.database.url.extension.db2=
scarab.database.pool.validationQuery.db2=SELECT 1 FROM SYSIBM.SYSDUMMY1
scarab.database.jdbc.driver.db2=COM.ibm.db2.jdbc.app.DB2Driver
scarab.database.admin.username.db2=${scarab.database.username}
scarab.database.admin.password.db2=${scarab.database.password}
scarab.database.username.db2=sa
scarab.database.password.db2=
scarab.test.database.name.db2=${scarab.database.name}
scarab.test.database.url.db2=jdbc:db2:${scarab.test.database.name}
scarab.test.database.username.db2=${scarab.database.username}
scarab.test.database.password.db2=${scarab.database.password}
scarab.database.jdbc.driver.jar.db2=db2java.zip

# ================
# End of Group db2
# ================